URI Design

Resource: /customers
GET (read): Get List - Returns List
POST (create): Create Item - Returns New Item
PUT (update): Update Batch / commonly this isn't supported - Returns Status Code Only
DELETE (delete): Error (should never support) - Returns Status Code Only * Error Status Code

Resource: /customers/123
GET (read): Get Item - Returns Item
POST (create): Error (already exists) - Returns Status Code Only * Error Status Code
PUT (update): Update Item - Returns Updated Item
DELETE (delete): Delete Item - Returns Status Code Only

CampsController
/api/camps
/api/camps/atl2016

split out controllers based on resources even if associated
TalksController (associations)
/api/camps/atl2016/talks
/api/camps/atl2016/talks/1

REST defines URIs as resources
- Bug rexceptions exist..
- ... don't be afraid of functional APIs
- dont try to do RPC stuff with it

When?
- For operational needs
- starting batch job
- clear cache
- Avoid for reporting
- Returning data != functional API

Once you publish an API, it's set in stone
  - Users/Customers rely on the API
  - But requirements will change
  - Need a way to evolve the API
        - Don't break clients
  - API version isn't product version
        - so they don't need to be tied together

Problem
- IN .NET
  - is done with 'package' version (assemblies)

API version is harder
- nees to support new and old users
- side-by-side deployment isnt' feasible
- code base to support both versions

API Versionsing schemes
- Not all of them are recommended
- Find a mechanism that works for you (need alignment with whole team)
- But remember:
  - serving the client not ourselves

Versioning in the URI
// URI Path
https://foo.org/api/v2/Customers

// Query string
https://foo.org/api/Customers?v=2.0

Versioning with Headers
GET /api/camps HTTP/1.1
Host: localhost:44388
Content-Type: application/json
X-Version: 2.0 <<<< HERE

Versioning with Accept Header
GET /api/camps HTTP/1.1
Host: localhost:44388
Content-Type: application/json
Accept: application/json;version=2.0

Versioning with Content Type
GET /api/camps HTTP/1.1
Host: localhost:44388
Content-Type: application/vnd.yourapp.camp.v1+json
Accept: application/vnd.yourapp.camp.v1+json

